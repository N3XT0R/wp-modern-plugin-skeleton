name: Continuous Integration

on:
  push:
    branches: [ '*' ]
    tags: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  ci:
    name: Run Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          tools: composer, phpunit, xdebug
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Run PHPUnit Tests
        run: vendor/bin/phpunit --configuration phpunit.xml --coverage-clover=coverage/clover.xml --path-coverage

      - uses: qltysh/qlty-action/coverage@v1
        with:
          token: ${{ secrets.QLTY_COVERAGE_TOKEN }}
          files: coverage/clover.xml

  build:
        name: Package Plugin
        runs-on: ubuntu-latest
        needs: ci
        if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')

        steps:
          - name: Checkout Repository
            uses: actions/checkout@v4

          - name: Set up PHP
            uses: shivammathur/setup-php@v2
            with:
              php-version: '8.2'

          - name: Install Dependencies
            run: composer install --no-dev --no-progress --prefer-dist

          - name: Generate Plugin Header
            run: composer generate-header

          - name: Make build script executable
            run: chmod +x build/build.sh

          - name: Run build script
            run: ./build/build.sh

          - name: Upload Artifact
            uses: actions/upload-artifact@v4
            with:
              name: xpub
              path: build/dist

  release:
       name: Create GitHub Release
       runs-on: ubuntu-latest
       needs: build
       if: startsWith(github.ref, 'refs/tags/')
       permissions:
         contents: write

       steps:
         - name: Download Build Artifact
           uses: actions/download-artifact@v4
           with:
             name: xpub
             path: release/

         - name: Re-zip downloaded artifact for GitHub Release
           run: |
            cd release
            zip -r ../xpub-multi-channel-publisher.zip .


         - name: Create GitHub Release
           uses: softprops/action-gh-release@v1
           with:
             body_path: release/xpub-multi-channel-publisher/CHANGELOG.md
             files: xpub-multi-channel-publisher.zip
           env:
             GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

